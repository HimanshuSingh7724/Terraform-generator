name: VulnGuard-AI CI/CD

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  deploy-and-scan:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      KEY_NAME: ${{ secrets.MY_KEY }}
    defaults:
      run:
        working-directory: ./VulnGuard-AI   # Set working directory for all run steps

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget -qO- https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.49.0_Linux-64bit.deb > trivy.deb
          sudo dpkg -i trivy.deb

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform  # Optional override for Terraform folder

      - name: Terraform Apply
        run: terraform apply -auto-approve \
            -var "docker_username=${{ secrets.DOCKER_USERNAME }}" \
            -var "docker_password=${{ secrets.DOCKER_PASSWORD }}" \
            -var "key_name=${{ secrets.MY_KEY }}"
        working-directory: ./terraform

      - name: Run VulnGuard-AI Scan
        run: python cli/vgai.py --path ./examples/vulnerable_app --dockerfile ./examples/vulnerable_app/Dockerfile --requirements ./examples/vulnerable_app/requirements.txt --apply
