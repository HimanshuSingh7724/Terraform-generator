name: Kubernetes Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # ---------------- Docker Build & Push ----------------
    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:latest ./K8s-Flask-App-Project/app

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

    # ---------------- Terraform Init ----------------
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0

    - name: Terraform Init
      working-directory: ./K8s-Flask-App-Project/terraform
      run: terraform init

    # ---------------- Terraform Import (Existing EKS Cluster) ----------------
    - name: Import existing EKS cluster
      working-directory: ./K8s-Flask-App-Project/terraform
      run: |
        terraform import aws_eks_cluster.my_cluster flask-cluster || echo "Cluster already imported"

    # ---------------- Terraform Apply ----------------
    - name: Terraform Apply
      working-directory: ./K8s-Flask-App-Project/terraform
      run: terraform apply -auto-approve

    # ---------------- Kubernetes Deployment ----------------
    - name: Apply Kubernetes manifests
      uses: azure/k8s-deploy@v4
      with:
        manifests: |
          ./K8s-Flask-App-Project/k8s/deployment.yaml
          ./K8s-Flask-App-Project/k8s/service.yaml
