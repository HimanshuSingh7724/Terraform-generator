name: Deploy StreamFlix

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: eu-north-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: StreamFlix/terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: StreamFlix/terraform
        run: terraform apply -auto-approve

      - name: Get EC2 IP (Cleaned Output)
        id: get_ip
        working-directory: StreamFlix/terraform
        run: |
          RAW_OUTPUT=$(terraform output ec2_public_ip)
          IP=$(echo "$RAW_OUTPUT" | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | tr -d '\n')
          echo "âœ… Cleaned EC2 IP: $IP"
          echo "EC2_IP=$IP" >> $GITHUB_ENV
          echo "::set-output name=ec2_ip::$IP"

      - name: Wait for EC2 to be ready
        run: sleep 60

      - name: Upload App to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ steps.get_ip.outputs.ec2_ip }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "./StreamFlix"
          target: "/home/ubuntu/"
          strip_components: 1

      - name: Run Docker on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ steps.get_ip.outputs.ec2_ip }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu
            sudo docker stop streamflix || true
            sudo docker rm streamflix || true
            sudo docker build -t streamflix .
            sudo docker run -d -p 5000:5000 --name streamflix streamflix
