name: Deploy StreamFlix

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: eu-north-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: StreamFlix/terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: StreamFlix/terraform
        run: terraform apply -auto-approve

      - name: Save EC2 IP to file
        working-directory: StreamFlix/terraform
        run: |
          terraform output -raw ec2_public_ip | tr -d '\r' > ../../ec2_ip.txt

      - name: Wait for EC2 to be ready
        run: sleep 60

      - name: Deploy App using scp and ssh
        run: |
          EC2_IP=$(cat ec2_ip.txt)
          echo "âœ… Using IP: $EC2_IP"
          
          # Add host key (optional, to avoid prompt)
          ssh-keyscan -H $EC2_IP >> ~/.ssh/known_hosts
          
          # Copy app folder to EC2
          scp -i private_key.pem -r ./StreamFlix ubuntu@$EC2_IP:/home/ubuntu/

          # SSH and run docker commands
          ssh -i private_key.pem ubuntu@$EC2_IP <<EOF
            cd /home/ubuntu/StreamFlix
            sudo docker stop streamflix || true
            sudo docker rm streamflix || true
            sudo docker build -t streamflix .
            sudo docker run -d -p 5000:5000 --name streamflix streamflix
          EOF
        env:
          # Make sure you save your private key as a GitHub Secret and write it to a file
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: Write private key file
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 400 private_key.pem
