name: Board Game App Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./board-game-app/terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./board-game-app/terraform
        run: terraform apply -auto-approve

      - name: Get Terraform Outputs
        id: tf_outputs
        working-directory: ./board-game-app/terraform
        run: |
          echo "ECR_REPO_URL=$(terraform output -raw ecr_repo_url)" >> $GITHUB_ENV
          echo "EXECUTION_ROLE_ARN=$(terraform output -raw ecs_task_execution_role_arn)" >> $GITHUB_ENV

      - name: Replace ECS Task Definition
        working-directory: ./board-game-app
        run: |
          sed -i "s|<ECR_REPO_URL>|${{ env.ECR_REPO_URL }}|" ecs-task-def.json
          sed -i "s|<EXECUTION_ROLE_ARN>|${{ env.EXECUTION_ROLE_ARN }}|" ecs-task-def.json

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image
        working-directory: ./board-game-app
        run: |
          docker build -t ${{ env.ECR_REPO_URL }}:latest -f Dockerfile .
          docker push ${{ env.ECR_REPO_URL }}:latest

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: board-game-app/ecs-task-def.json
          cluster: board-game-cluster
          service: board-game-service
          wait-for-service-stability: true
