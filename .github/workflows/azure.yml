name: Deploy Flask App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Initialize Terraform
        working-directory: ./Terraform-Generator/AzurePipelineMigrationTool/terraform
        run: terraform init

      - name: Apply Terraform
        working-directory: ./Terraform-Generator/AzurePipelineMigrationTool/terraform
        run: terraform apply -auto-approve

      - name: Get EC2 Public IP
        id: terraform
        working-directory: ./Terraform-Generator/AzurePipelineMigrationTool/terraform
        run: |
          echo "EC2_PUBLIC_IP=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV
          echo "::set-output name=ec2_public_ip::$(terraform output -raw ec2_public_ip)"

      - name: Wait for EC2 to be ready
        run: sleep 60

      - name: Copy app to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ steps.terraform.outputs.ec2_public_ip }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./Terraform-Generator/AzurePipelineMigrationTool"
          target: "/home/ec2-user/"

      - name: Deploy Docker app on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ steps.terraform.outputs.ec2_public_ip }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ec2-user/AzurePipelineMigrationTool
            docker build -t azure-pipeline-migrator .
            docker stop azure-pipeline-migrator || true
            docker rm azure-pipeline-migrator || true
            docker run -d --name azure-pipeline-migrator -p 5000:5000 azure-pipeline-migrator
