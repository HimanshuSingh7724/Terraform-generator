name: Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        working-directory: ./task-manager/backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests (if any)
        run: echo "Add your test commands here"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      - name: Terraform Init
        working-directory: ./task-manager/terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./task-manager/terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
          AWS_REGION: eu-north-1
        run: terraform apply -auto-approve

      - name: Build Docker image
        working-directory: ./task-manager/backend
        run: docker build -t task-manager-backend .

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_REGION: eu-north-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}

      - name: Tag and Push Docker image to ECR
        run: |
          docker tag task-manager-backend:latest 291741702080.dkr.ecr.eu-north-1.amazonaws.com/task-manager-backend:latest
          docker push 291741702080.dkr.ecr.eu-north-1.amazonaws.com/task-manager-backend:latest

      - name: Deploy to ECS or EC2
        run: echo "Add ECS deployment commands here or restart container"
